// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String
  mfaSecret    String?
  role         Role     @default(USER)
  vaults       Vault[]
  createdAt    DateTime @default(now())
}

model Vault {
  id           String           @id @default(uuid())
  ownerId      String
  cipher       Bytes
  dekWrapped   Bytes
  iv           Bytes
  alg          String           @default("AES-256-GCM")
  expiresAt    DateTime
  createdAt    DateTime         @default(now())
  owner        User             @relation(fields: [ownerId], references: [id])
  logs         VaultAccessLog[]
  OneTimeToken OneTimeToken[]
}

model VaultAccessLog {
  id        String       @id @default(uuid())
  vaultId   String
  ip        String
  userAgent String
  result    AccessResult
  at        DateTime     @default(now())
  vault     Vault        @relation(fields: [vaultId], references: [id])
}

model OneTimeToken {
  id        String   @id @default(uuid())
  vaultId   String
  tokenHash String   @unique
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  vault     Vault    @relation(fields: [vaultId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum AccessResult {
  SUCCESS
  FAIL
  UNAUTHORIZED
}
